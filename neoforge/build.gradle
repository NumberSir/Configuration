buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        maven {
            name = 'NeoForged'
            url = 'https://maven.neoforged.net/releases'
        }
    }
}
plugins {
    id 'java-library'
    id 'idea'
    id 'java'
    id 'net.neoforged.gradle.userdev' version "${neogradle_userdev}"
    id 'maven-publish'
}

version = "${project.version}"
group = project.mod_group
def classifier = 'neoforge'
base {
    archivesName = "${project.mod_id}-${classifier}-${project.minecraft_version}"
}

def at = project(":common").file("src/main/resources/META-INF/accesstransformer.cfg")
if (at.exists()) {
    minecraft.accessTransformers.file at
}

runs {
    configureEach {
        systemProperty 'forge.logging.console.level', 'debug'
        modSource project.sourceSets.main
    }

    client {
        workingDirectory project.file('run/client')
    }

    server {
        workingDirectory project.file('run/server')
    }
}


sourceSets.main.resources.srcDir 'src/generated/resources'

dependencies {
    implementation "net.neoforged:neoforge:${project.neoforge_version}"
    compileOnly project(":common")
}

tasks.named('compileJava', JavaCompile).configure {
    source(project(":common").sourceSets.main.allSource)
}

processResources {
    from project(":common").sourceSets.main.resources
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "${mod_name}",
                "Specification-Vendor"    : "${mod_authors}",
                "Specification-Version"   : project.jar.archiveVersion,
                "Implementation-Title"    : "${mod_name}",
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "${mod_authors}",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }

    exclude("${mod_id}.accesswidener")
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId = project.group
            artifactId = "${project.mod_id}-${project.minecraft_version}"
            version = "${project.version}-${classifier}"
            from components.java
        }
    }

    repositories {
        maven {
            url = uri(project.findProperty("MAVEN_PUBLIC_URL") ?: "")
            credentials {
                username project.findProperty("MAVEN_USERNAME") ?: ""
                password project.findProperty("MAVEN_PASSWORD") ?: ""
            }
        }
    }
}